type Query {
    " Obtenemos la lista de todos los usuarios"
    users: [User!]!

    "Iniciamos sesion en el sistema"
    login(email: String!, password: String!): ResultToken!

    "Obtener informacion de usuario con el token"
    me: ResultUser!

    "Obtener temperaturas"
    temperaturas(codigo: String, fechaRegistro: String, temperatura: String): [Temperaturas]
}    


type Mutation {
    "Registro de los usuarios en el sistema"
    register(user: UserInput): ResultUser!
}


type Temperaturas {
    codigo: String,
    temperatura: String,
    fechaRegistro: String
}


type User {
    id: ID!
    name: String!
    lastname: String!
    email: String!
    password: String
    registerDate: String!
}

input UserInput {
    name: String!
    lastname: String!
    email: String!
    password: String!
}

type ResultUser {
    status: Boolean!
    message: String!
    user: User
}

type ResultToken {
    status: Boolean!
    message: String!
    token: String
}